.MODEL SMALL

.STACK 1000H

.DATA

CR EQU 0DH
LF EQU 0AH
NUMBER_PRINTLN DB '00000$'
.CODE
main PROC
	MOV AX, @DATA
	MOV DS, AX
	PUSH BP
	MOV BP, SP
	SUB SP, 2	;Line :2
	SUB SP, 2	;Line :2
	SUB SP, 2	;Line :2
	SUB SP, 2	;Line :2
L6:
	MOV CX, 0
	PUSH CX
	PUSH BP
	MOV BX, -4
	ADD BP, BX
	POP AX
	POP CX
	MOV [BP], CX
	MOV BP, AX
L5:
	MOV CX, 1
	PUSH CX
	PUSH BP
	MOV BX, -6
	ADD BP, BX
	POP AX
	POP CX
	MOV [BP], CX
	MOV BP, AX
L4:
	MOV CX, 0
	PUSH CX
	PUSH BP
	MOV BX, -8
	ADD BP, BX
	POP AX
	POP CX
	MOV [BP], CX
	MOV BP, AX
L7:
	PUSH BP
	MOV BX, -8
	ADD BP, BX
	MOV CX, [BP]
	POP BP
	PUSH CX
	MOV CX, 4
	POP AX
	CMP AX, CX
	JL L8
	JMP L3
L8:
	MOV CX, 3
	PUSH CX
	PUSH BP
	MOV BX, -2
	ADD BP, BX
	POP AX
	POP CX
	MOV [BP], CX
	MOV BP, AX
L11:
L12:
	PUSH BP
	MOV BX, -2
	ADD BP, BX
	MOV CX, [BP]
	MOV AX, CX
	DEC CX
	MOV [BP], CX
	POP BP
	MOV CX, AX
	JCXZ L10
	JMP L13
L13:
	PUSH BP
	MOV BX, -4
	ADD BP, BX
	MOV CX, [BP]
	MOV AX, CX
	INC CX
	MOV [BP], CX
	POP BP
	MOV CX, AX
L14:
	JMP L12
L10:
	PUSH BP
	MOV BX, -8
	ADD BP, BX
	MOV CX, [BP]
	MOV AX, CX
	INC CX
	MOV [BP], CX
	POP BP
	MOV CX, AX
	JMP L7
L3:
	PUSH BP
	MOV BX, -2
	ADD BP, BX
	MOV AX, [BP]
	CALL PRINT_OUT
	POP BP
L2:
	PUSH BP
	MOV BX, -4
	ADD BP, BX
	MOV AX, [BP]
	CALL PRINT_OUT
	POP BP
L1:
	PUSH BP
	MOV BX, -6
	ADD BP, BX
	MOV AX, [BP]
	CALL PRINT_OUT
	POP BP
L0:
main_leaving:
	ADD SP,8
	POP BP
	MOV AX, 4CH
	INT 21H
main ENDP
NEWLINE PROC ;This is for printing newline.
	PUSH AX
	PUSH DX
	MOV AH,2
	MOV DL,CR
	INT 21H
	MOV AH,2
	MOV DL,LF
	INT 21H
	POP DX
	POP AX
	RET
NEWLINE ENDP

PRINT_OUT PROC  ;print the value stored in AX
	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX
	PUSH SI
	LEA SI,NUMBER_PRINTLN
	MOV BX,10
	ADD SI,4
	CMP AX,0
	JNGE NEGATE
	PRINT:
	XOR DX,DX
	DIV BX
	MOV [SI],DL
	ADD [SI],'0'
	DEC SI
	CMP AX,0
	JNE PRINT
	INC SI
	LEA DX,SI
	MOV AH,9
	INT 21H
	CALL NEWLINE
	POP SI
	POP DX
	POP CX
	POP BX
	POP AX
	RET
	NEGATE:
	PUSH AX
	MOV AH,2
	MOV DL,'-'
	INT 21H
	POP AX
	NEG AX
	JMP PRINT
PRINT_OUT ENDP

END main
