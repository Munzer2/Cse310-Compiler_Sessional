Terminals unused in grammar

    CONST_CHAR
    DO
    CONTINUE
    CHAR
    DOUBLE


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_declaration
    6     | func_definition

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN RPAREN SEMICOLON
    9                 | type_specifier ID LPAREN error

   10 func_definition: type_specifier ID LPAREN parameter_list RPAREN compound_statement
   11                | type_specifier ID LPAREN RPAREN compound_statement
   12                | error

   13 parameter_list: parameter_list COMMA type_specifier ID
   14               | parameter_list COMMA type_specifier
   15               | type_specifier ID
   16               | type_specifier

   17 $@1: ε

   18 compound_statement: LCURL $@1 statements RCURL
   19                   | LCURL RCURL

   20 var_declaration: type_specifier declaration_list SEMICOLON
   21                | type_specifier error SEMICOLON

   22 type_specifier: INT
   23               | FLOAT
   24               | VOID

   25 declaration_list: declaration_list COMMA ID
   26                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   27                 | ID
   28                 | ID LTHIRD CONST_INT RTHIRD

   29 statements: statement
   30           | statements statement

   31 statement: var_declaration
   32          | expression_statement
   33          | compound_statement
   34          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   35          | IF LPAREN expression RPAREN statement
   36          | IF LPAREN expression RPAREN statement ELSE statement
   37          | WHILE LPAREN expression RPAREN statement
   38          | PRINTLN LPAREN ID RPAREN SEMICOLON
   39          | RETURN expression SEMICOLON
   40          | PRINTLN LPAREN ID RPAREN error
   41          | RETURN expression error

   42 expression_statement: SEMICOLON
   43                     | expression SEMICOLON
   44                     | error

   45 variable: ID
   46         | ID LTHIRD expression RTHIRD

   47 expression: logic_expression
   48           | variable ASSIGNOP logic_expression

   49 logic_expression: rel_expression
   50                 | rel_expression LOGICOP rel_expression

   51 rel_expression: simple_expression
   52               | simple_expression RELOP simple_expression

   53 simple_expression: term
   54                  | simple_expression ADDOP term

   55 term: unary_expression
   56     | term MULOP unary_expression

   57 unary_expression: ADDOP unary_expression
   58                 | NOT unary_expression
   59                 | factor

   60 factor: variable
   61       | ID LPAREN argument_list RPAREN
   62       | LPAREN expression RPAREN
   63       | CONST_INT
   64       | CONST_FLOAT
   65       | variable INCOP
   66       | variable DECOP

   67 argument_list: arguments
   68              | ε

   69 arguments: arguments COMMA logic_expression
   70          | logic_expression


Terminals, with rules where they appear

    $end (0) 0
    error (256) 9 12 21 40 41 44
    CONST_INT <symbVal> (258) 26 28 63
    CONST_FLOAT <symbVal> (259) 64
    CONST_CHAR <symbVal> (260)
    ADDOP <symbVal> (261) 54 57
    MULOP <symbVal> (262) 56
    LOGICOP <symbVal> (263) 50
    RELOP <symbVal> (264) 52
    ID <symbVal> (265) 7 8 9 10 11 13 15 25 26 27 28 38 40 45 46 61
    IF <symbVal> (266) 35 36
    ELSE <symbVal> (267) 36
    FOR <symbVal> (268) 34
    WHILE <symbVal> (269) 37
    DO <symbVal> (270)
    CONTINUE <symbVal> (271)
    INT <symbVal> (272) 22
    FLOAT <symbVal> (273) 23
    CHAR <symbVal> (274)
    DOUBLE <symbVal> (275)
    VOID <symbVal> (276) 24
    RETURN <symbVal> (277) 39 41
    INCOP <symbVal> (278) 65
    DECOP <symbVal> (279) 66
    ASSIGNOP <symbVal> (280) 48
    LPAREN <symbVal> (281) 7 8 9 10 11 34 35 36 37 38 40 61 62
    RPAREN <symbVal> (282) 7 8 10 11 34 35 36 37 38 40 61 62
    LCURL <symbVal> (283) 18 19
    RCURL <symbVal> (284) 18 19
    LTHIRD <symbVal> (285) 26 28 46
    RTHIRD <symbVal> (286) 26 28 46
    SEMICOLON <symbVal> (287) 7 8 20 21 38 39 42 43
    COMMA <symbVal> (288) 13 14 25 26 69
    NOT <symbVal> (289) 58
    PRINTLN <symbVal> (290) 38 40
    LOWER_THAN_ELSE (291)


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    start <symbVal> (38)
        on left: 1
        on right: 0
    program <symbVal> (39)
        on left: 2 3
        on right: 1 2
    unit <symbVal> (40)
        on left: 4 5 6
        on right: 2 3
    func_declaration <symbVal> (41)
        on left: 7 8 9
        on right: 5
    func_definition <symbVal> (42)
        on left: 10 11 12
        on right: 6
    parameter_list <symbVal> (43)
        on left: 13 14 15 16
        on right: 7 10 13 14
    compound_statement <symbVal> (44)
        on left: 18 19
        on right: 10 11 33
    $@1 (45)
        on left: 17
        on right: 18
    var_declaration <symbVal> (46)
        on left: 20 21
        on right: 4 31
    type_specifier <symbVal> (47)
        on left: 22 23 24
        on right: 7 8 9 10 11 13 14 15 16 20 21
    declaration_list <symbVal> (48)
        on left: 25 26 27 28
        on right: 20 25 26
    statements <symbVal> (49)
        on left: 29 30
        on right: 18 30
    statement <symbVal> (50)
        on left: 31 32 33 34 35 36 37 38 39 40 41
        on right: 29 30 34 35 36 37
    expression_statement <symbVal> (51)
        on left: 42 43 44
        on right: 32 34
    variable <symbVal> (52)
        on left: 45 46
        on right: 48 60 65 66
    expression <symbVal> (53)
        on left: 47 48
        on right: 34 35 36 37 39 41 43 46 62
    logic_expression <symbVal> (54)
        on left: 49 50
        on right: 47 48 69 70
    rel_expression <symbVal> (55)
        on left: 51 52
        on right: 49 50
    simple_expression <symbVal> (56)
        on left: 53 54
        on right: 51 52 54
    term <symbVal> (57)
        on left: 55 56
        on right: 53 54 56
    unary_expression <symbVal> (58)
        on left: 57 58 59
        on right: 55 56 57 58
    factor <symbVal> (59)
        on left: 60 61 62 63 64 65 66
        on right: 59
    argument_list <symbVal> (60)
        on left: 67 68
        on right: 61
    arguments <symbVal> (61)
        on left: 69 70
        on right: 67 69


State 0

    0 $accept: • start $end

    error  shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    VOID   shift, and go to state 4

    start             go to state 5
    program           go to state 6
    unit              go to state 7
    func_declaration  go to state 8
    func_definition   go to state 9
    var_declaration   go to state 10
    type_specifier    go to state 11


State 1

   12 func_definition: error •

    $default  reduce using rule 12 (func_definition)


State 2

   22 type_specifier: INT •

    $default  reduce using rule 22 (type_specifier)


State 3

   23 type_specifier: FLOAT •

    $default  reduce using rule 23 (type_specifier)


State 4

   24 type_specifier: VOID •

    $default  reduce using rule 24 (type_specifier)


State 5

    0 $accept: start • $end

    $end  shift, and go to state 12


State 6

    1 start: program •
    2 program: program • unit

    error  shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    VOID   shift, and go to state 4

    $end  reduce using rule 1 (start)

    unit              go to state 13
    func_declaration  go to state 8
    func_definition   go to state 9
    var_declaration   go to state 10
    type_specifier    go to state 11


State 7

    3 program: unit •

    $default  reduce using rule 3 (program)


State 8

    5 unit: func_declaration •

    $default  reduce using rule 5 (unit)


State 9

    6 unit: func_definition •

    $default  reduce using rule 6 (unit)


State 10

    4 unit: var_declaration •

    $default  reduce using rule 4 (unit)


State 11

    7 func_declaration: type_specifier • ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier • ID LPAREN RPAREN SEMICOLON
    9                 | type_specifier • ID LPAREN error
   10 func_definition: type_specifier • ID LPAREN parameter_list RPAREN compound_statement
   11                | type_specifier • ID LPAREN RPAREN compound_statement
   20 var_declaration: type_specifier • declaration_list SEMICOLON
   21                | type_specifier • error SEMICOLON

    error  shift, and go to state 14
    ID     shift, and go to state 15

    declaration_list  go to state 16


State 12

    0 $accept: start $end •

    $default  accept


State 13

    2 program: program unit •

    $default  reduce using rule 2 (program)


State 14

   21 var_declaration: type_specifier error • SEMICOLON

    SEMICOLON  shift, and go to state 17


State 15

    7 func_declaration: type_specifier ID • LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID • LPAREN RPAREN SEMICOLON
    9                 | type_specifier ID • LPAREN error
   10 func_definition: type_specifier ID • LPAREN parameter_list RPAREN compound_statement
   11                | type_specifier ID • LPAREN RPAREN compound_statement
   27 declaration_list: ID •
   28                 | ID • LTHIRD CONST_INT RTHIRD

    LPAREN  shift, and go to state 18
    LTHIRD  shift, and go to state 19

    $default  reduce using rule 27 (declaration_list)


State 16

   20 var_declaration: type_specifier declaration_list • SEMICOLON
   25 declaration_list: declaration_list • COMMA ID
   26                 | declaration_list • COMMA ID LTHIRD CONST_INT RTHIRD

    SEMICOLON  shift, and go to state 20
    COMMA      shift, and go to state 21


State 17

   21 var_declaration: type_specifier error SEMICOLON •

    $default  reduce using rule 21 (var_declaration)


State 18

    7 func_declaration: type_specifier ID LPAREN • parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN • RPAREN SEMICOLON
    9                 | type_specifier ID LPAREN • error
   10 func_definition: type_specifier ID LPAREN • parameter_list RPAREN compound_statement
   11                | type_specifier ID LPAREN • RPAREN compound_statement

    error   shift, and go to state 22
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    VOID    shift, and go to state 4
    RPAREN  shift, and go to state 23

    parameter_list  go to state 24
    type_specifier  go to state 25


State 19

   28 declaration_list: ID LTHIRD • CONST_INT RTHIRD

    CONST_INT  shift, and go to state 26


State 20

   20 var_declaration: type_specifier declaration_list SEMICOLON •

    $default  reduce using rule 20 (var_declaration)


State 21

   25 declaration_list: declaration_list COMMA • ID
   26                 | declaration_list COMMA • ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 27


State 22

    9 func_declaration: type_specifier ID LPAREN error •

    $default  reduce using rule 9 (func_declaration)


State 23

    8 func_declaration: type_specifier ID LPAREN RPAREN • SEMICOLON
   11 func_definition: type_specifier ID LPAREN RPAREN • compound_statement

    LCURL      shift, and go to state 28
    SEMICOLON  shift, and go to state 29

    compound_statement  go to state 30


State 24

    7 func_declaration: type_specifier ID LPAREN parameter_list • RPAREN SEMICOLON
   10 func_definition: type_specifier ID LPAREN parameter_list • RPAREN compound_statement
   13 parameter_list: parameter_list • COMMA type_specifier ID
   14               | parameter_list • COMMA type_specifier

    RPAREN  shift, and go to state 31
    COMMA   shift, and go to state 32


State 25

   15 parameter_list: type_specifier • ID
   16               | type_specifier •

    ID  shift, and go to state 33

    $default  reduce using rule 16 (parameter_list)


State 26

   28 declaration_list: ID LTHIRD CONST_INT • RTHIRD

    RTHIRD  shift, and go to state 34


State 27

   25 declaration_list: declaration_list COMMA ID •
   26                 | declaration_list COMMA ID • LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 35

    $default  reduce using rule 25 (declaration_list)


State 28

   18 compound_statement: LCURL • $@1 statements RCURL
   19                   | LCURL • RCURL

    RCURL  shift, and go to state 36

    $default  reduce using rule 17 ($@1)

    $@1  go to state 37


State 29

    8 func_declaration: type_specifier ID LPAREN RPAREN SEMICOLON •

    $default  reduce using rule 8 (func_declaration)


State 30

   11 func_definition: type_specifier ID LPAREN RPAREN compound_statement •

    $default  reduce using rule 11 (func_definition)


State 31

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN • SEMICOLON
   10 func_definition: type_specifier ID LPAREN parameter_list RPAREN • compound_statement

    LCURL      shift, and go to state 28
    SEMICOLON  shift, and go to state 38

    compound_statement  go to state 39


State 32

   13 parameter_list: parameter_list COMMA • type_specifier ID
   14               | parameter_list COMMA • type_specifier

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    VOID   shift, and go to state 4

    type_specifier  go to state 40


State 33

   15 parameter_list: type_specifier ID •

    $default  reduce using rule 15 (parameter_list)


State 34

   28 declaration_list: ID LTHIRD CONST_INT RTHIRD •

    $default  reduce using rule 28 (declaration_list)


State 35

   26 declaration_list: declaration_list COMMA ID LTHIRD • CONST_INT RTHIRD

    CONST_INT  shift, and go to state 41


State 36

   19 compound_statement: LCURL RCURL •

    $default  reduce using rule 19 (compound_statement)


State 37

   18 compound_statement: LCURL $@1 • statements RCURL

    error        shift, and go to state 42
    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ADDOP        shift, and go to state 45
    ID           shift, and go to state 46
    IF           shift, and go to state 47
    FOR          shift, and go to state 48
    WHILE        shift, and go to state 49
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    VOID         shift, and go to state 4
    RETURN       shift, and go to state 50
    LPAREN       shift, and go to state 51
    LCURL        shift, and go to state 28
    SEMICOLON    shift, and go to state 52
    NOT          shift, and go to state 53
    PRINTLN      shift, and go to state 54

    compound_statement    go to state 55
    var_declaration       go to state 56
    type_specifier        go to state 57
    statements            go to state 58
    statement             go to state 59
    expression_statement  go to state 60
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68


State 38

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON •

    $default  reduce using rule 7 (func_declaration)


State 39

   10 func_definition: type_specifier ID LPAREN parameter_list RPAREN compound_statement •

    $default  reduce using rule 10 (func_definition)


State 40

   13 parameter_list: parameter_list COMMA type_specifier • ID
   14               | parameter_list COMMA type_specifier •

    ID  shift, and go to state 69

    $default  reduce using rule 14 (parameter_list)


State 41

   26 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT • RTHIRD

    RTHIRD  shift, and go to state 70


State 42

   44 expression_statement: error •

    $default  reduce using rule 44 (expression_statement)


State 43

   63 factor: CONST_INT •

    $default  reduce using rule 63 (factor)


State 44

   64 factor: CONST_FLOAT •

    $default  reduce using rule 64 (factor)


State 45

   57 unary_expression: ADDOP • unary_expression

    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ADDOP        shift, and go to state 45
    ID           shift, and go to state 46
    LPAREN       shift, and go to state 51
    NOT          shift, and go to state 53

    variable          go to state 71
    unary_expression  go to state 72
    factor            go to state 68


State 46

   45 variable: ID •
   46         | ID • LTHIRD expression RTHIRD
   61 factor: ID • LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 73
    LTHIRD  shift, and go to state 74

    $default  reduce using rule 45 (variable)


State 47

   35 statement: IF • LPAREN expression RPAREN statement
   36          | IF • LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 75


State 48

   34 statement: FOR • LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 76


State 49

   37 statement: WHILE • LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 77


State 50

   39 statement: RETURN • expression SEMICOLON
   41          | RETURN • expression error

    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ADDOP        shift, and go to state 45
    ID           shift, and go to state 46
    LPAREN       shift, and go to state 51
    NOT          shift, and go to state 53

    variable           go to state 61
    expression         go to state 78
    logic_expression   go to state 63
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68


State 51

   62 factor: LPAREN • expression RPAREN

    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ADDOP        shift, and go to state 45
    ID           shift, and go to state 46
    LPAREN       shift, and go to state 51
    NOT          shift, and go to state 53

    variable           go to state 61
    expression         go to state 79
    logic_expression   go to state 63
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68


State 52

   42 expression_statement: SEMICOLON •

    $default  reduce using rule 42 (expression_statement)


State 53

   58 unary_expression: NOT • unary_expression

    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ADDOP        shift, and go to state 45
    ID           shift, and go to state 46
    LPAREN       shift, and go to state 51
    NOT          shift, and go to state 53

    variable          go to state 71
    unary_expression  go to state 80
    factor            go to state 68


State 54

   38 statement: PRINTLN • LPAREN ID RPAREN SEMICOLON
   40          | PRINTLN • LPAREN ID RPAREN error

    LPAREN  shift, and go to state 81


State 55

   33 statement: compound_statement •

    $default  reduce using rule 33 (statement)


State 56

   31 statement: var_declaration •

    $default  reduce using rule 31 (statement)


State 57

   20 var_declaration: type_specifier • declaration_list SEMICOLON
   21                | type_specifier • error SEMICOLON

    error  shift, and go to state 14
    ID     shift, and go to state 82

    declaration_list  go to state 16


State 58

   18 compound_statement: LCURL $@1 statements • RCURL
   30 statements: statements • statement

    error        shift, and go to state 42
    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ADDOP        shift, and go to state 45
    ID           shift, and go to state 46
    IF           shift, and go to state 47
    FOR          shift, and go to state 48
    WHILE        shift, and go to state 49
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    VOID         shift, and go to state 4
    RETURN       shift, and go to state 50
    LPAREN       shift, and go to state 51
    LCURL        shift, and go to state 28
    RCURL        shift, and go to state 83
    SEMICOLON    shift, and go to state 52
    NOT          shift, and go to state 53
    PRINTLN      shift, and go to state 54

    compound_statement    go to state 55
    var_declaration       go to state 56
    type_specifier        go to state 57
    statement             go to state 84
    expression_statement  go to state 60
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68


State 59

   29 statements: statement •

    $default  reduce using rule 29 (statements)


State 60

   32 statement: expression_statement •

    $default  reduce using rule 32 (statement)


State 61

   48 expression: variable • ASSIGNOP logic_expression
   60 factor: variable •
   65       | variable • INCOP
   66       | variable • DECOP

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    ASSIGNOP  shift, and go to state 87

    $default  reduce using rule 60 (factor)


State 62

   43 expression_statement: expression • SEMICOLON

    SEMICOLON  shift, and go to state 88


State 63

   47 expression: logic_expression •

    $default  reduce using rule 47 (expression)


State 64

   49 logic_expression: rel_expression •
   50                 | rel_expression • LOGICOP rel_expression

    LOGICOP  shift, and go to state 89

    $default  reduce using rule 49 (logic_expression)


State 65

   51 rel_expression: simple_expression •
   52               | simple_expression • RELOP simple_expression
   54 simple_expression: simple_expression • ADDOP term

    ADDOP  shift, and go to state 90
    RELOP  shift, and go to state 91

    $default  reduce using rule 51 (rel_expression)


State 66

   53 simple_expression: term •
   56 term: term • MULOP unary_expression

    MULOP  shift, and go to state 92

    $default  reduce using rule 53 (simple_expression)


State 67

   55 term: unary_expression •

    $default  reduce using rule 55 (term)


State 68

   59 unary_expression: factor •

    $default  reduce using rule 59 (unary_expression)


State 69

   13 parameter_list: parameter_list COMMA type_specifier ID •

    $default  reduce using rule 13 (parameter_list)


State 70

   26 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD •

    $default  reduce using rule 26 (declaration_list)


State 71

   60 factor: variable •
   65       | variable • INCOP
   66       | variable • DECOP

    INCOP  shift, and go to state 85
    DECOP  shift, and go to state 86

    $default  reduce using rule 60 (factor)


State 72

   57 unary_expression: ADDOP unary_expression •

    $default  reduce using rule 57 (unary_expression)


State 73

   61 factor: ID LPAREN • argument_list RPAREN

    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ADDOP        shift, and go to state 45
    ID           shift, and go to state 46
    LPAREN       shift, and go to state 51
    NOT          shift, and go to state 53

    $default  reduce using rule 68 (argument_list)

    variable           go to state 71
    logic_expression   go to state 93
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68
    argument_list      go to state 94
    arguments          go to state 95


State 74

   46 variable: ID LTHIRD • expression RTHIRD

    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ADDOP        shift, and go to state 45
    ID           shift, and go to state 46
    LPAREN       shift, and go to state 51
    NOT          shift, and go to state 53

    variable           go to state 61
    expression         go to state 96
    logic_expression   go to state 63
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68


State 75

   35 statement: IF LPAREN • expression RPAREN statement
   36          | IF LPAREN • expression RPAREN statement ELSE statement

    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ADDOP        shift, and go to state 45
    ID           shift, and go to state 46
    LPAREN       shift, and go to state 51
    NOT          shift, and go to state 53

    variable           go to state 61
    expression         go to state 97
    logic_expression   go to state 63
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68


State 76

   34 statement: FOR LPAREN • expression_statement expression_statement expression RPAREN statement

    error        shift, and go to state 42
    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ADDOP        shift, and go to state 45
    ID           shift, and go to state 46
    LPAREN       shift, and go to state 51
    SEMICOLON    shift, and go to state 52
    NOT          shift, and go to state 53

    expression_statement  go to state 98
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68


State 77

   37 statement: WHILE LPAREN • expression RPAREN statement

    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ADDOP        shift, and go to state 45
    ID           shift, and go to state 46
    LPAREN       shift, and go to state 51
    NOT          shift, and go to state 53

    variable           go to state 61
    expression         go to state 99
    logic_expression   go to state 63
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68


State 78

   39 statement: RETURN expression • SEMICOLON
   41          | RETURN expression • error

    error      shift, and go to state 100
    SEMICOLON  shift, and go to state 101


State 79

   62 factor: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 102


State 80

   58 unary_expression: NOT unary_expression •

    $default  reduce using rule 58 (unary_expression)


State 81

   38 statement: PRINTLN LPAREN • ID RPAREN SEMICOLON
   40          | PRINTLN LPAREN • ID RPAREN error

    ID  shift, and go to state 103


State 82

   27 declaration_list: ID •
   28                 | ID • LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 19

    $default  reduce using rule 27 (declaration_list)


State 83

   18 compound_statement: LCURL $@1 statements RCURL •

    $default  reduce using rule 18 (compound_statement)


State 84

   30 statements: statements statement •

    $default  reduce using rule 30 (statements)


State 85

   65 factor: variable INCOP •

    $default  reduce using rule 65 (factor)


State 86

   66 factor: variable DECOP •

    $default  reduce using rule 66 (factor)


State 87

   48 expression: variable ASSIGNOP • logic_expression

    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ADDOP        shift, and go to state 45
    ID           shift, and go to state 46
    LPAREN       shift, and go to state 51
    NOT          shift, and go to state 53

    variable           go to state 71
    logic_expression   go to state 104
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68


State 88

   43 expression_statement: expression SEMICOLON •

    $default  reduce using rule 43 (expression_statement)


State 89

   50 logic_expression: rel_expression LOGICOP • rel_expression

    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ADDOP        shift, and go to state 45
    ID           shift, and go to state 46
    LPAREN       shift, and go to state 51
    NOT          shift, and go to state 53

    variable           go to state 71
    rel_expression     go to state 105
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68


State 90

   54 simple_expression: simple_expression ADDOP • term

    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ADDOP        shift, and go to state 45
    ID           shift, and go to state 46
    LPAREN       shift, and go to state 51
    NOT          shift, and go to state 53

    variable          go to state 71
    term              go to state 106
    unary_expression  go to state 67
    factor            go to state 68


State 91

   52 rel_expression: simple_expression RELOP • simple_expression

    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ADDOP        shift, and go to state 45
    ID           shift, and go to state 46
    LPAREN       shift, and go to state 51
    NOT          shift, and go to state 53

    variable           go to state 71
    simple_expression  go to state 107
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68


State 92

   56 term: term MULOP • unary_expression

    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ADDOP        shift, and go to state 45
    ID           shift, and go to state 46
    LPAREN       shift, and go to state 51
    NOT          shift, and go to state 53

    variable          go to state 71
    unary_expression  go to state 108
    factor            go to state 68


State 93

   70 arguments: logic_expression •

    $default  reduce using rule 70 (arguments)


State 94

   61 factor: ID LPAREN argument_list • RPAREN

    RPAREN  shift, and go to state 109


State 95

   67 argument_list: arguments •
   69 arguments: arguments • COMMA logic_expression

    COMMA  shift, and go to state 110

    $default  reduce using rule 67 (argument_list)


State 96

   46 variable: ID LTHIRD expression • RTHIRD

    RTHIRD  shift, and go to state 111


State 97

   35 statement: IF LPAREN expression • RPAREN statement
   36          | IF LPAREN expression • RPAREN statement ELSE statement

    RPAREN  shift, and go to state 112


State 98

   34 statement: FOR LPAREN expression_statement • expression_statement expression RPAREN statement

    error        shift, and go to state 42
    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ADDOP        shift, and go to state 45
    ID           shift, and go to state 46
    LPAREN       shift, and go to state 51
    SEMICOLON    shift, and go to state 52
    NOT          shift, and go to state 53

    expression_statement  go to state 113
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68


State 99

   37 statement: WHILE LPAREN expression • RPAREN statement

    RPAREN  shift, and go to state 114


State 100

   41 statement: RETURN expression error •

    $default  reduce using rule 41 (statement)


State 101

   39 statement: RETURN expression SEMICOLON •

    $default  reduce using rule 39 (statement)


State 102

   62 factor: LPAREN expression RPAREN •

    $default  reduce using rule 62 (factor)


State 103

   38 statement: PRINTLN LPAREN ID • RPAREN SEMICOLON
   40          | PRINTLN LPAREN ID • RPAREN error

    RPAREN  shift, and go to state 115


State 104

   48 expression: variable ASSIGNOP logic_expression •

    $default  reduce using rule 48 (expression)


State 105

   50 logic_expression: rel_expression LOGICOP rel_expression •

    $default  reduce using rule 50 (logic_expression)


State 106

   54 simple_expression: simple_expression ADDOP term •
   56 term: term • MULOP unary_expression

    MULOP  shift, and go to state 92

    $default  reduce using rule 54 (simple_expression)


State 107

   52 rel_expression: simple_expression RELOP simple_expression •
   54 simple_expression: simple_expression • ADDOP term

    ADDOP  shift, and go to state 90

    $default  reduce using rule 52 (rel_expression)


State 108

   56 term: term MULOP unary_expression •

    $default  reduce using rule 56 (term)


State 109

   61 factor: ID LPAREN argument_list RPAREN •

    $default  reduce using rule 61 (factor)


State 110

   69 arguments: arguments COMMA • logic_expression

    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ADDOP        shift, and go to state 45
    ID           shift, and go to state 46
    LPAREN       shift, and go to state 51
    NOT          shift, and go to state 53

    variable           go to state 71
    logic_expression   go to state 116
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68


State 111

   46 variable: ID LTHIRD expression RTHIRD •

    $default  reduce using rule 46 (variable)


State 112

   35 statement: IF LPAREN expression RPAREN • statement
   36          | IF LPAREN expression RPAREN • statement ELSE statement

    error        shift, and go to state 42
    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ADDOP        shift, and go to state 45
    ID           shift, and go to state 46
    IF           shift, and go to state 47
    FOR          shift, and go to state 48
    WHILE        shift, and go to state 49
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    VOID         shift, and go to state 4
    RETURN       shift, and go to state 50
    LPAREN       shift, and go to state 51
    LCURL        shift, and go to state 28
    SEMICOLON    shift, and go to state 52
    NOT          shift, and go to state 53
    PRINTLN      shift, and go to state 54

    compound_statement    go to state 55
    var_declaration       go to state 56
    type_specifier        go to state 57
    statement             go to state 117
    expression_statement  go to state 60
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68


State 113

   34 statement: FOR LPAREN expression_statement expression_statement • expression RPAREN statement

    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ADDOP        shift, and go to state 45
    ID           shift, and go to state 46
    LPAREN       shift, and go to state 51
    NOT          shift, and go to state 53

    variable           go to state 61
    expression         go to state 118
    logic_expression   go to state 63
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68


State 114

   37 statement: WHILE LPAREN expression RPAREN • statement

    error        shift, and go to state 42
    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ADDOP        shift, and go to state 45
    ID           shift, and go to state 46
    IF           shift, and go to state 47
    FOR          shift, and go to state 48
    WHILE        shift, and go to state 49
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    VOID         shift, and go to state 4
    RETURN       shift, and go to state 50
    LPAREN       shift, and go to state 51
    LCURL        shift, and go to state 28
    SEMICOLON    shift, and go to state 52
    NOT          shift, and go to state 53
    PRINTLN      shift, and go to state 54

    compound_statement    go to state 55
    var_declaration       go to state 56
    type_specifier        go to state 57
    statement             go to state 119
    expression_statement  go to state 60
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68


State 115

   38 statement: PRINTLN LPAREN ID RPAREN • SEMICOLON
   40          | PRINTLN LPAREN ID RPAREN • error

    error      shift, and go to state 120
    SEMICOLON  shift, and go to state 121


State 116

   69 arguments: arguments COMMA logic_expression •

    $default  reduce using rule 69 (arguments)


State 117

   35 statement: IF LPAREN expression RPAREN statement •
   36          | IF LPAREN expression RPAREN statement • ELSE statement

    ELSE  shift, and go to state 122

    $default  reduce using rule 35 (statement)


State 118

   34 statement: FOR LPAREN expression_statement expression_statement expression • RPAREN statement

    RPAREN  shift, and go to state 123


State 119

   37 statement: WHILE LPAREN expression RPAREN statement •

    $default  reduce using rule 37 (statement)


State 120

   40 statement: PRINTLN LPAREN ID RPAREN error •

    $default  reduce using rule 40 (statement)


State 121

   38 statement: PRINTLN LPAREN ID RPAREN SEMICOLON •

    $default  reduce using rule 38 (statement)


State 122

   36 statement: IF LPAREN expression RPAREN statement ELSE • statement

    error        shift, and go to state 42
    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ADDOP        shift, and go to state 45
    ID           shift, and go to state 46
    IF           shift, and go to state 47
    FOR          shift, and go to state 48
    WHILE        shift, and go to state 49
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    VOID         shift, and go to state 4
    RETURN       shift, and go to state 50
    LPAREN       shift, and go to state 51
    LCURL        shift, and go to state 28
    SEMICOLON    shift, and go to state 52
    NOT          shift, and go to state 53
    PRINTLN      shift, and go to state 54

    compound_statement    go to state 55
    var_declaration       go to state 56
    type_specifier        go to state 57
    statement             go to state 124
    expression_statement  go to state 60
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68


State 123

   34 statement: FOR LPAREN expression_statement expression_statement expression RPAREN • statement

    error        shift, and go to state 42
    CONST_INT    shift, and go to state 43
    CONST_FLOAT  shift, and go to state 44
    ADDOP        shift, and go to state 45
    ID           shift, and go to state 46
    IF           shift, and go to state 47
    FOR          shift, and go to state 48
    WHILE        shift, and go to state 49
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    VOID         shift, and go to state 4
    RETURN       shift, and go to state 50
    LPAREN       shift, and go to state 51
    LCURL        shift, and go to state 28
    SEMICOLON    shift, and go to state 52
    NOT          shift, and go to state 53
    PRINTLN      shift, and go to state 54

    compound_statement    go to state 55
    var_declaration       go to state 56
    type_specifier        go to state 57
    statement             go to state 125
    expression_statement  go to state 60
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68


State 124

   36 statement: IF LPAREN expression RPAREN statement ELSE statement •

    $default  reduce using rule 36 (statement)


State 125

   34 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement •

    $default  reduce using rule 34 (statement)
